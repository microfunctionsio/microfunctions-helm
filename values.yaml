name: microfunctions

ownerEmail: owner@microfunctions.local


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: { }
# Default values for microfunctions-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

microfunctionsapis:
  replicaCount: 1
  name: microfunctions-apis
  image:
    repository: microfunctions/microfunctions-apis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  securityContext: { }

microfunctionsauth:
  replicaCount: 1
  name: microfunctions-auth
  image:
    repository: microfunctions/microfunctions-auth
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  securityContext: { }

  JwtSecretExpiresIn: 43200s

microfunctionscluster:
  replicaCount: 1
  name: microfunctions-cluster
  image:
    repository: microfunctions/microfunctions-cluster
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  manifestPath: ./dist/dependency/

microfunctionsserverless:
  replicaCount: 1
  name: microfunctions-serverless
  image:
    repository: microfunctions/microfunctions-serverless
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

microfunctionsinitjob:
  name: microfunctions-init-job
  image:
    repository: microfunctions/microfunctions-init-job
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0
  restartPolicy: OnFailure
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  securityContext: { }

microfunctionscontroller:
  replicaCount: 1
  name: microfunctions-controller
  image:
    repository: microfunctions/microfunctions-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP
  ##
  service:
    type: NodePort
    ## HTTP Port
    ##
    port: 3000
    ## HTTPS Port
    ##
    httpsPort: 8443
    ## HTTPS Target Port
    ## defaults to https unless overridden to the specified port.
    ## if you want the target port to be "http" or "80" you can specify that here.
    ##
    httpsTargetPort: https
    ## Metrics Port
    ##
    metricsPort: 9117

    externalTrafficPolicy: Cluster
    annotations: { }
    ## Limits which cidr blocks can connect to service's load balancer
    ## Only valid if service.type: LoadBalancer
    loadBalancerSourceRanges: [ ]
    ## Extra ports to expose (normally used with the `sidecar` value)
    # extraPorts:

  ingress:
    enabled: false
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

microfunctionsconsole:
  replicaCount: 1
  name: microfunctions-console
  image:
    repository: microfunctions/microfunctions-console
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.0

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP
  ##
  service:
    type: NodePort
    ## HTTP Port
    ##
    port: 80
    ## HTTPS Port
    ##
    httpsPort: 443
    ## HTTPS Target Port
    ## defaults to https unless overridden to the specified port.
    ## if you want the target port to be "http" or "80" you can specify that here.
    ##
    httpsTargetPort: https
    ## Metrics Port
    ##
    metricsPort: 9117
    ## Node Ports to expose
    ## nodePorts:
    ##   http: <to set explicitly, choose port between 30000-32767>
    ##   https: <to set explicitly, choose port between 30000-32767>
    ##   metrics: <to set explicitly, choose port between 30000-32767>
    nodePorts:
      http: ""
      https: ""
      metrics: ""
    ## Enable client source IP preservation
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    annotations: { }
    ## Limits which cidr blocks can connect to service's load balancer
    ## Only valid if service.type: LoadBalancer
    loadBalancerSourceRanges: [ ]
    ## Extra ports to expose (normally used with the `sidecar` value)
    # extraPorts:

  ## Configure the ingress resource that allows you to access the
  ## WordPress installation. Set up the URL
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false

    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  controllerHost :  microfunctions.local

  controllerPath :   /microfunctions/apis

  controllerPort: ""

mongodb:
  mongodbUsername: microfunctions
  mongodbDatabase: microfunctions

rabbitmq:
  auth:
    username: microfunctions
  image:
    repository: bitnami/rabbitmq
    tag: 3.8.9
  persistence:
    enabled: false

nginx-ingress-controller:
  enabled: false
  service:
    type: ClusterIP
kong:
  enabled: false
  service:
    type: LoadBalancer
metrics-server:
  enabled: false
  apiService:
    create: true
  extraArgs:
    kubelet-insecure-tls: true
    kubelet-preferred-address-types: InternalIP

cert-manager :
  enabled: false
  installCRDs: true
  clusterResourceNamespace: microfunctions
